/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package cn;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.Socket;
import java.sql.ResultSet;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

import net.proteanit.sql.DbUtils;
/**
 *
 * @author osman
 */

public class FrmUser extends javax.swing.JFrame {

    /**
     * Creates new form FrmUser
     */
    
    String name;
    Socket client;
    OutputStream outToServer;
    DataOutputStream out;
    InputStream inFromServer;
    DataInputStream in;


    public String getName()
    {
        return name;
    }
    
    public void updateMayor(ResultSet rs)
    {
       leaderBoard.setModel(DbUtils.resultSetToTableModel(rs));
    }
    public FrmUser(String user,Socket cli) throws Exception 
    {
        initComponents();
        lblUserName.setText(user);
        comboPlace.removeAll();
        setBounds(0,0,380,300);
        try
        {
            client=cli;
            outToServer = client.getOutputStream();
            out = new DataOutputStream(outToServer);
            inFromServer = client.getInputStream();
            in = new DataInputStream(inFromServer);
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }


        this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        
        
        DatabaseType db= new DatabaseType();
        String q="Select pname from place";
        ResultSet rs;
        try
        {
            db.openConnection();
            rs=db.read(q);
            while(rs.next())
            {
                comboPlace.addItem(rs.getString(1));
            }
            db.closeConnection();
            
        }
        catch(Exception e)
        {
            System.out.println(e.getMessage());
        }
    }

    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        leaderBoard = new javax.swing.JTable();
        jSeparator2 = new javax.swing.JSeparator();
        comboPlace = new javax.swing.JComboBox();
        cmdCheckIn = new javax.swing.JButton();
        txtLong = new javax.swing.JTextField();
        txtLat = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblUserName = new javax.swing.JLabel();
        cmdExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        leaderBoard.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Name", "Check-Ins"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(leaderBoard);
        leaderBoard.getColumnModel().getColumn(0).setResizable(false);
        leaderBoard.getColumnModel().getColumn(1).setResizable(false);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(20, 180, 310, 80);
        getContentPane().add(jSeparator2);
        jSeparator2.setBounds(0, 170, 360, 10);

        comboPlace.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select A Place" }));
        comboPlace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboPlaceActionPerformed(evt);
            }
        });
        getContentPane().add(comboPlace);
        comboPlace.setBounds(20, 140, 310, 20);

        cmdCheckIn.setText("CheckIn");
        cmdCheckIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCheckInActionPerformed(evt);
            }
        });
        getContentPane().add(cmdCheckIn);
        cmdCheckIn.setBounds(90, 110, 120, 23);
        getContentPane().add(txtLong);
        txtLong.setBounds(90, 80, 240, 20);
        getContentPane().add(txtLat);
        txtLat.setBounds(90, 50, 240, 20);

        jLabel1.setText("Longitude");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 80, 70, 20);

        jLabel2.setText("Latitude");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(10, 50, 70, 20);

        lblUserName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblUserName.setText("USER Name");
        getContentPane().add(lblUserName);
        lblUserName.setBounds(10, 10, 320, 30);

        cmdExit.setText("Exit");
        cmdExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdExitActionPerformed(evt);
            }
        });
        getContentPane().add(cmdExit);
        cmdExit.setBounds(210, 110, 120, 23);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmdExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdExitActionPerformed

        this.setVisible(false);
        new FrmLogin().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_cmdExitActionPerformed

    private void comboPlaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboPlaceActionPerformed

        if(comboPlace.getSelectedIndex()==0) return;
        
        VenueDetails(comboPlace.getSelectedIndex());
    
    }//GEN-LAST:event_comboPlaceActionPerformed

    private void cmdCheckInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCheckInActionPerformed
        
    
      
      try
      {
         out.writeUTF(comboPlace.getSelectedIndex()+","+txtLat.getText()+","+txtLong.getText());
         System.out.println("Server says " + in.readUTF());
      }
      catch(Exception e)
      {
         e.printStackTrace();
      }
        
        
    }//GEN-LAST:event_cmdCheckInActionPerformed
    
   private void VenueDetails(int Name)
    {
        String q="Select userid,count(*) as checkIns from checkIn "
                + "where placeid='"+Name+"' "
                + "group by userid  "
                + "order by checkIns desc "
                + "LIMIT 3";
        DatabaseType db =new DatabaseType();
        ResultSet rs;
        
        try
        {
            db.openConnection();
            rs=db.read(q);
            updateMayor(rs);
            db.closeConnection();
        }
        catch (Exception ex)
        {
            System.out.println("Getting Status: "+ex.getMessage());
        }
        
    }
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdCheckIn;
    private javax.swing.JButton cmdExit;
    private javax.swing.JComboBox comboPlace;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblUserName;
    private javax.swing.JTable leaderBoard;
    private javax.swing.JTextField txtLat;
    private javax.swing.JTextField txtLong;
    // End of variables declaration//GEN-END:variables
}
